[{"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\index.js":"1","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\App.js":"2","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\SignUp\\SignUp.js":"4","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\SignIn\\SignIn.js":"5","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\route\\routes.js":"6","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\LandingPage\\LandingPage.js":"7","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\AppBar\\AppBar.js":"8","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\Input\\InputField.js":"9","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\PasswordInput\\PasswordInput.js":"10","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\ForwardPassword\\ForgotPassword.js":"11","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\PasswordStrength\\PasswordStrength.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":700,"mtime":1607757280123,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":11111,"mtime":1607842571942,"results":"17","hashOfConfig":"14"},{"size":6442,"mtime":1607774235398,"results":"18","hashOfConfig":"14"},{"size":881,"mtime":1607757134043,"results":"19","hashOfConfig":"14"},{"size":502,"mtime":1607748434411,"results":"20","hashOfConfig":"14"},{"size":3919,"mtime":1607746335259,"results":"21","hashOfConfig":"14"},{"size":678,"mtime":1607769401306,"results":"22","hashOfConfig":"14"},{"size":1633,"mtime":1607769412452,"results":"23","hashOfConfig":"14"},{"size":12182,"mtime":1607843644139,"results":"24","hashOfConfig":"14"},{"size":673,"mtime":1607842403732,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1olp47j",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\index.js",[],["54","55"],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\App.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\SignUp\\SignUp.js",["56"],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\SignIn\\SignIn.js",["57"],"import React, { Component } from 'react'\r\n\r\n//Boostrap\r\nimport Card from 'react-bootstrap/Card'\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//Material-UI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nimport './SignIn.css'\r\n\r\nimport InputField from '../../components/Input/InputField'\r\nimport PasswordInput from '../../components/PasswordInput/PasswordInput'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        validated:false,\r\n        email:null,\r\n        password:null,\r\n        type:\"password\"\r\n    }\r\n\r\n    handleHomeRoute = () => {\r\n        window.location.replace('/')\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.setState({\r\n          validated: !form.checkValidity(),\r\n        });\r\n    }\r\n\r\n    handleCommonTypeInputChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    validateEmail = () => {\r\n        const pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        const result = pattern.test(this.state.email);\r\n        if (!result) {\r\n            this.setState({\r\n              emailError: \"Enter a valid email address\",\r\n            });\r\n        } \r\n\r\n        return result\r\n    }\r\n\r\n    handleVisibility = () => {\r\n        if(this.state.type === \"password\") {\r\n            this.setState({ type:\"text\" })\r\n        } else {\r\n            this.setState({ type:\"password\" })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container component=\"main\" className = \"signIn_root\">\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={4} md={5} className = \"signIn_image\"/>\r\n\r\n                <Grid item xs={12} sm={8} md={7} component={Paper} elevation={6} square className = \"card_root\">\r\n                    <div className = \"signIn_paper\" >\r\n                        <Card className = \"signIn_card\">\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <span className = \"not_member\">Not a member ? <a href=\"/signUp\">SIGN UP</a> </span>\r\n                                </Row>\r\n\r\n                                <Card.Title className = \"signIn_from_title\">Sign In</Card.Title>\r\n                                <Form\r\n                                    onSubmit={this.handleSubmit}\r\n                                    noValidate\r\n                                    validated={this.state.validated}\r\n                                >\r\n                                <Row>\r\n                                    <Col>\r\n                                        <InputField \r\n                                            type = \"email\"\r\n                                            name = \"email\"\r\n                                            value = { this.state.email }\r\n                                            onChange = { this.handleCommonTypeInputChange }\r\n                                            max = { 320 }\r\n                                            placeholder = \"Email\"\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col>\r\n                                        <PasswordInput \r\n                                            type = { this.state.type }\r\n                                            name = \"password\"\r\n                                            value = { this.state.password }\r\n                                            onChange = { this.handleCommonTypeInputChange }\r\n                                            max = { 30 }\r\n                                            placeholder = \"Password\"  \r\n                                            onClick = { this.handleVisibility } \r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className = \"submit_btn\">\r\n                                    <Col>\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                        Sign In\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Grid container style = {{marginTop:'2%'}}>\r\n                                    <Grid item xs></Grid>\r\n                                    <Grid item>\r\n                                        <Link href=\"/forgotPassword\" variant=\"body2\">\r\n                                            {\"Forgot Password\"}\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Row className = \"home_btn\" style = {{marginTop:'5%'}}>\r\n                                    <Col>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        fullWidth\r\n                                        startIcon={<NavigationIcon  />}\r\n                                        onClick = {this.handleHomeRoute}\r\n                                    >\r\n                                    Home\r\n                                    </Button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\route\\routes.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\LandingPage\\LandingPage.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\AppBar\\AppBar.js",["58"],"import React, {useState, useEffect} from 'react'\r\nimport './AppBar.css'\r\n\r\n//Boostrap\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\n//Material-UI\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.grey[100],\r\n      height: theme.spacing(3),\r\n      color: theme.palette.grey[800],\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: theme.palette.grey[300],\r\n      },\r\n      '&:active': {\r\n        boxShadow: theme.shadows[1],\r\n        backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n      },\r\n    },\r\n  }))(Chip);\r\n\r\nconst AppBar = () => {\r\n    const [auth,setAuth] = useState(false)\r\n\r\n    const [scrolled,setScrolled]= useState(false);\r\n\r\n    const handleScroll = () => {\r\n      const offset = window.scrollY;\r\n      if(offset > 450 ) {\r\n        setScrolled(true);\r\n      }\r\n      else {\r\n        setScrolled(false);\r\n      }\r\n    } \r\n\r\n    useEffect(() => {\r\n      window.addEventListener('scroll',handleScroll)\r\n    })\r\n  \r\n    let x=['appBar_div_root'];\r\n\r\n    if(scrolled){\r\n      x.push('scrolled');\r\n    }\r\n\r\n    const handleLoginRoute = () => {\r\n        window.location.replace('/signIn')\r\n    }\r\n\r\n    const handleSignUpRoute = () => {\r\n        window.location.replace('/signUp')\r\n    }\r\n\r\n    const handleClick = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className = \"appBar_div_root\">\r\n            <Navbar fixed=\"top\" className={x.join(\" \")} >\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" aria-label=\"drawer\" style = {{color:'white'}}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <StyledBreadcrumb\r\n                            component=\"a\"\r\n                            href=\"/\"\r\n                            label=\"Home\"\r\n                            icon={<HomeIcon fontSize=\"small\" />}\r\n                        />\r\n                        <StyledBreadcrumb \r\n                            component=\"a\" \r\n                            href=\"#\" \r\n                            label=\"Catalog\" \r\n                            onClick={handleClick} \r\n                        />\r\n                        <StyledBreadcrumb\r\n                            label=\"Accessories\"\r\n                            deleteIcon={<ExpandMoreIcon />}\r\n                            onClick={handleClick}\r\n                            onDelete={handleClick}\r\n                        />\r\n                    </Breadcrumbs>\r\n                </Toolbar>\r\n\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    {\r\n                        auth ? <Navbar.Text>Signed in as: <a href=\"#profile\">Mark Otto</a></Navbar.Text> :\r\n                        (\r\n                        <ButtonGroup size=\"large\" variant=\"text\" aria-label=\"large outlined primary button group\">\r\n                            <Button className = \"auth\" onClick = {handleLoginRoute} style = {{color:'white'}}>LOGIN</Button>\r\n                            <Button onClick = {handleSignUpRoute} style = {{color:'white'}}>SIGN UP</Button>\r\n                        </ButtonGroup>\r\n                        )\r\n                    }\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBar","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\Input\\InputField.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\PasswordInput\\PasswordInput.js",["59","60"],"import React from 'react'\r\n\r\n//Boostrap\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport visibility_off from '../../assets/images/visibility_off.png'\r\nimport visibility from '../../assets/images/visibility.png'\r\n\r\nconst PasswordInput = ({type, name, value, onChange, max, placeholder, onClick}) => {\r\n    return (\r\n        <Form.Group as = {Row}>\r\n            <Col>\r\n                <InputGroup>\r\n                    <Form.Control\r\n                        type={type}\r\n                        name={name}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        required\r\n                        maxLength={max}\r\n                        placeholder = {placeholder}\r\n                    />\r\n\r\n                    <InputGroup.Append onClick={onClick}>\r\n                        <InputGroup.Text className=\"password-toggle__span\">\r\n                            {\r\n                                type === \"password\" ? <img src={visibility} className = \"fa-eye-slash\"/> : \r\n                                <img src={visibility_off} className = \"fa-eye\"/>\r\n                            }\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {placeholder} can't be empty\r\n                    </Form.Control.Feedback>\r\n                </InputGroup>\r\n            </Col>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default PasswordInput\r\n","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\ForwardPassword\\ForgotPassword.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\PasswordStrength\\PasswordStrength.js",["61","62","63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":15},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":15},{"ruleId":"69","severity":1,"message":"73","line":36,"column":17,"nodeType":"71","messageId":"72","endLine":36,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":30,"column":55,"nodeType":"76","endLine":30,"endColumn":105},{"ruleId":"74","severity":1,"message":"75","line":31,"column":33,"nodeType":"76","endLine":31,"endColumn":81},{"ruleId":"69","severity":1,"message":"77","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":12},{"ruleId":"69","severity":1,"message":"78","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":18},{"ruleId":"69","severity":1,"message":"79","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":11},{"ruleId":"69","severity":1,"message":"80","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":11},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","'setAuth' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'InputGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]