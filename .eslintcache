[{"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\index.js":"1","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\App.js":"2","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\SignUp\\SignUp.js":"4","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\SignIn\\SignIn.js":"5","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\route\\routes.js":"6","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\LandingPage\\LandingPage.js":"7","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\AppBar\\AppBar.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":697,"mtime":1607231331688,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":8939,"mtime":1607236222276,"results":"13","hashOfConfig":"10"},{"size":5457,"mtime":1607236283924,"results":"14","hashOfConfig":"10"},{"size":645,"mtime":1607229083597,"results":"15","hashOfConfig":"10"},{"size":514,"mtime":1607345380620,"results":"16","hashOfConfig":"10"},{"size":3454,"mtime":1607345270068,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1olp47j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\index.js",[],["37","38"],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\App.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\SignUp\\SignUp.js",["39"],"import React, { Component } from 'react'\r\n\r\n//Boostrap\r\nimport Card from 'react-bootstrap/Card'\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//Material-UI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nimport './SignUp.css'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        validated:false,\r\n        firstName:null,\r\n        lastName:null,\r\n        dob:null,\r\n        email:null,\r\n        password:null,\r\n        confirmPassword:null,\r\n        promoChecked:false,\r\n        passwordMatchError:null,\r\n        emailError:null\r\n    }\r\n\r\n    handleHomeRoute = () => {\r\n        window.location.replace('/')\r\n    }\r\n\r\n    checkPasswordMatch = () => {\r\n        if(this.state.password === this.state.confirmPassword){\r\n            return true\r\n        } else {\r\n            this.setState({\r\n                passwordMatchError:\"Password and Confirm Password did not match\"\r\n            })\r\n            return false\r\n        }\r\n    }\r\n\r\n    validateEmail = () => {\r\n        const pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        const result = pattern.test(this.state.email);\r\n        if (!result) {\r\n            this.setState({\r\n              emailError: \"Enter a valid email address\",\r\n            });\r\n        } \r\n\r\n        return result\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.setState({\r\n          validated: !form.checkValidity(),\r\n        });\r\n\r\n        if (this.checkPasswordMatch() && this.validateEmail()) {\r\n            const data = {\r\n                firstName : this.state.firstName,\r\n                lastName : this.state.lastName,\r\n                dob : this.state.dob,\r\n                email : this.state.email,\r\n                password: this.state.password,\r\n                promoChecked : this.state.promoChecked\r\n            }\r\n\r\n            console.log(data)\r\n        }\r\n        \r\n    }\r\n\r\n    handleCommonTypeInputChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    handleAcceptPromotoion = () => {\r\n        this.setState({\r\n            promoChecked: !this.state.promoChecked\r\n        })\r\n    }\r\n\r\n    renderCheckBox = (checked, onChange, label) => {\r\n        return (\r\n            <Form.Group>\r\n                <Form.Check\r\n                checked = {checked}\r\n                onChange = {onChange}\r\n                type = \"checkbox\"\r\n                name = \"checked\"\r\n                readOnly\r\n                label = {label}\r\n                />\r\n          </Form.Group>\r\n        )\r\n    }\r\n\r\n    renderInputField = (type,name,value,onChange,max,placeholder) => {\r\n        return (\r\n            <Form.Group>\r\n                <Form.Control\r\n                    type = {type}\r\n                    name = {name}\r\n                    value = {value} \r\n                    onChange = {onChange}\r\n                    required\r\n                    maxLength = {max}\r\n                    placeholder = {placeholder}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {placeholder} name can't be empty\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Grid container component=\"main\" className = \"signUp_root\">\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={4} md={5} className = \"signUp_image\"/>\r\n\r\n                <Grid item xs={12} sm={8} md={7} component={Paper} elevation={6} square>\r\n                    <div className = \"signUp_paper\" >\r\n                        <Card className = \"signUp_card\">\r\n                            <Card.Body>\r\n                            <Row>\r\n                                <span className = \"already_member\">Already a member ? <a href=\"/signIn\">SIGN IN</a> </span>\r\n                            </Row>\r\n\r\n                            <Card.Title className = \"signUp_from_title\">Sign Up</Card.Title>\r\n                            </Card.Body>\r\n                            <Form\r\n                                onSubmit={this.handleSubmit}\r\n                                noValidate\r\n                                validated={this.state.validated}\r\n                            >\r\n                            <Row>\r\n                                <Col sm={6}>\r\n                                    { this.renderInputField(\"text\", \"firstName\", this.state.firstName, this.handleCommonTypeInputChange, 20, \"First Name\")}\r\n                                </Col>\r\n                                <Col sm={6}>\r\n                                    { this.renderInputField(\"text\", \"lastName\", this.state.lastName, this.handleCommonTypeInputChange, 20, \"Last Name\")}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    { this.renderInputField(\"text\", \"dob\", this.state.dob, this.handleCommonTypeInputChange, 10, \"Date of Birth\")}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    { this.renderInputField(\"email\", \"email\", this.state.email, this.handleCommonTypeInputChange, 320, \"Email\")}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    { this.renderInputField(\"password\", \"password\", this.state.password, this.handleCommonTypeInputChange, 20, \"Password\")}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    { this.renderInputField(\"password\", \"confirmPassword\", this.state.confirmPassword, this.handleCommonTypeInputChange, 20, \"Confirm Password\")}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    { this.renderCheckBox(this.state.promoChecked, this.handleAcceptPromotoion, \"I would like to recieve Tute-Me Promotions to my email\")}\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Row className = \"submit_btn\">\r\n                                <Col>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                    Sign Up\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Grid container className = \"signIn\">\r\n                                <Grid item xs></Grid>\r\n                                <Grid item>\r\n                                    <Link href=\"/signIn\" variant=\"body2\">\r\n                                        {\"Already a member? Sign In\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Row className = \"terms_condition_root\">\r\n                                <span className = \"terms_condition\">By signing up, I agreed to</span>\r\n                                <Link href = \"#\" variant=\"body1\">Terms & Conditions</Link>\r\n                            </Row>\r\n\r\n                            <Row className = \"home_btn\">\r\n                                <Col>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        startIcon={<NavigationIcon  />}\r\n                                        onClick = {this.handleHomeRoute}\r\n                                    >\r\n                                    Home\r\n                                    </Button>\r\n                                </Col>  \r\n                            </Row>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\SignIn\\SignIn.js",["40"],"import React, { Component } from 'react'\r\n\r\n//Boostrap\r\nimport Card from 'react-bootstrap/Card'\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//Material-UI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nimport './SignIn.css'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        validated:false,\r\n        email:null,\r\n        password:null\r\n    }\r\n\r\n    handleHomeRoute = () => {\r\n        window.location.replace('/')\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.setState({\r\n          validated: !form.checkValidity(),\r\n        });\r\n    }\r\n\r\n    handleCommonTypeInputChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    renderInputField = (type,name,value,onChange,max,placeholder) => {\r\n        return (\r\n            <Form.Group>\r\n                <Form.Control\r\n                    type = {type}\r\n                    name = {name}\r\n                    value = {value} \r\n                    onChange = {onChange}\r\n                    required\r\n                    maxLength = {max}\r\n                    placeholder = {placeholder}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {placeholder} name can't be empty\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container component=\"main\" className = \"signIn_root\">\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={4} md={5} className = \"signIn_image\"/>\r\n\r\n                <Grid item xs={12} sm={8} md={7} component={Paper} elevation={6} square className = \"card_root\">\r\n                    <div className = \"signIn_paper\" >\r\n                        <Card className = \"signIn_card\">\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <span className = \"not_member\">Not a member ? <a href=\"/signUp\">SIGN UP</a> </span>\r\n                                </Row>\r\n\r\n                                <Card.Title className = \"signIn_from_title\">Sign In</Card.Title>\r\n                                <Form\r\n                                    onSubmit={this.handleSubmit}\r\n                                    noValidate\r\n                                    validated={this.state.validated}\r\n                                >\r\n                                <Row>\r\n                                    <Col>\r\n                                        { this.renderInputField(\"email\", \"email\", this.state.email, this.handleCommonTypeInputChange, 320, \"Email\")}\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col>\r\n                                        { this.renderInputField(\"password\", \"password\", this.state.password, this.handleCommonTypeInputChange, 20, \"Password\")}\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Grid container>\r\n                                    <Grid item xs></Grid>\r\n                                    <Grid item>\r\n                                        <Link href=\"#\" variant=\"body2\">\r\n                                            {\"Forgot Password\"}\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Row className = \"submit_btn\">\r\n                                    <Col>\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                        Sign In\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className = \"home_btn\">\r\n                                    <Col>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        startIcon={<NavigationIcon  />}\r\n                                        onClick = {this.handleHomeRoute}\r\n                                    >\r\n                                    Home\r\n                                    </Button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn","C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\route\\routes.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\screens\\LandingPage\\LandingPage.js",[],"C:\\Users\\Home\\Documents\\Design Project\\tute-me-frontend\\src\\components\\AppBar\\AppBar.js",["41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":15},{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":15},{"ruleId":"46","severity":1,"message":"50","line":36,"column":17,"nodeType":"48","messageId":"49","endLine":36,"endColumn":24},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","'setAuth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]